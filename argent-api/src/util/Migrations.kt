package argent.util

import argent.checklists.ChecklistItems
import argent.checklists.Checklists
import org.flywaydb.core.Flyway
import org.jetbrains.exposed.sql.SchemaUtils
import org.jetbrains.exposed.sql.SchemaUtils.createIndex
import org.jetbrains.exposed.sql.transactions.transaction
import javax.sql.DataSource

/*
* This can be called as a gradle task to output the SQL that would be generated by exposed for our DAOs
* */
fun main() {
    transaction(DataBases.Argent.database) {
        val tables = SchemaUtils.sortTablesByReferences(listOf(Checklists, ChecklistItems))
        val alters = arrayListOf<String>()
        val statements = tables.flatMap { table ->
            val (create, alter) = table.ddl.partition { it.startsWith("CREATE ") }
            val indicesDDL = table.indices.flatMap { createIndex(it) }
            alters += alter
            create + indicesDDL
        } + alters
        statements.forEach(::println)
    }
}

fun runMigrations(dataSource: DataSource) = Flyway
    .configure()
    .run {
        dataSource(dataSource)
        locations("classpath:migrations")
    }
    .load()
    .migrate()
